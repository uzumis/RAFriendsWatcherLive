// API/widgetDoingChievo.js
// Busca do backend a cada segundo

let meme = [
  "est치 querendo a conquista",
  "est치 sofrendo por uma conquista",
  "n칚o consegue a conquista",
  "quer muito a conquista",
  "deseja ardentemente a conquista",
  "est치 chorando por uma conquista",
  "est치 aborrecido pela conquista",
  "n칚o desiste em ter a conquista",
  "j치 sonhou com essa conquista umas 3 vezes",
  "pediu ajuda at칠 pro chatGPT pra conseguir essa conquista",
  "prometeu que vai dormir s칩 depois de pegar essa conquista",
  "est치 quase fazendo promessa pra conseguir essa conquista",
  "j치 pensou em desistir, mas a conquista n칚o deixa",
  "est치 em modo hardcore s칩 pra essa conquista",
  "essa conquista virou meta de vida",
  "est치 nervoso pra essa conquista",
  "essa conquista est치 no topo da lista de desejos",
  "j치 pediu conselho pra guru da conquista",
  "essa conquista virou meme no grupo",
  "est치 em busca da lend치ria conquista perdida",
  "essa conquista est치 mais dif칤cil que final de Dark Souls"
];

// Elementos globais
const resultadoDiv = document.getElementById('resultado');
let searchInput = document.getElementById('doingChievoSearchInput');
if (!searchInput) {
  searchInput = document.createElement('input');
  searchInput.type = 'text';
  searchInput.id = 'doingChievoSearchInput';
  searchInput.placeholder = 'Buscar conquista...';
  searchInput.style.margin = '10px 0';
  searchInput.style.width = '100%';
  searchInput.style.padding = '6px';
  searchInput.style.borderRadius = '6px';
  searchInput.style.border = '1px solid #0ff';
  searchInput.style.background = '#222';
  searchInput.style.color = '#0ff';
  resultadoDiv.appendChild(searchInput);
}
let achArrayGlobal = [];
let showMissableOnly = false;

function renderProgression(achievements, username) {
  resultadoDiv.innerHTML = '';
  // Bot칚o filtro missable
  const missableBtn = document.createElement('button');
  missableBtn.textContent = showMissableOnly ? 'Mostrar todas' : 'Mostrar s칩 conquistas perd칤veis (missable)';
  missableBtn.style.margin = '0 0 10px 0';
  missableBtn.style.background = '#222';
  missableBtn.style.color = '#ff0';
  missableBtn.style.border = '1px solid #ff0';
  missableBtn.style.borderRadius = '6px';
  missableBtn.style.padding = '6px 12px';
  missableBtn.style.cursor = 'pointer';
  missableBtn.onclick = function() {
    showMissableOnly = !showMissableOnly;
    renderProgression(achievements, username);
  };
  resultadoDiv.appendChild(missableBtn);
  resultadoDiv.appendChild(searchInput);
  if (achievements && typeof achievements === 'object') {
    // Corrige o nome do usu치rio para primeira letra mai칰scula
    const formatUsername = u => u ? u.charAt(0).toUpperCase() + u.slice(1) : '';
    achArrayGlobal = Object.values(achievements)
      .filter(a => !a.dateEarnedHardcore && !a.DateEarned);
    let filteredArray = achArrayGlobal;
    if (showMissableOnly) {
      filteredArray = achArrayGlobal.filter(a => a.type === 'missable');
    }
    const usernameFormatted = formatUsername(username);
    if (filteredArray.length === 0) {
      const msg = document.createElement('div');
      msg.textContent = showMissableOnly ? 'Nenhuma conquista missable encontrada.' : 'conseguiu todas as conquistas';
      msg.style.color = '#ff0';
      msg.style.fontSize = '1.1em';
      msg.style.margin = '24px 0';
      resultadoDiv.appendChild(msg);
      // Card especial de todas as conquistas
      if (!showMissableOnly) {
        document.getElementById('cardConquista').innerHTML = `
          <div style="background:#181818;border-radius:12px;padding:20px;box-shadow:0 2px 8px #000;width:350px;display:flex;align-items:center;gap:16px;font-family:sans-serif;">
            <span style='font-size:64px;margin-right:16px;'>游끥</span>
            <div style='flex:1;'>
              <div style='font-size:1em;font-weight:bold;color:#ff0;margin-bottom:8px;'>${usernameFormatted} conseguiu todas as conquistas!</div>
              <div style='font-size:1.2em;font-weight:bold;color:#0ff;'>Parab칠ns!</div>
              <div style='color:#fff;margin:8px 0;'>Voc칡 completou todos os desafios!</div>
              <div style='color:#ff0;font-size:1em;'>Trof칠u m치ximo!</div>
            </div>
          </div>
        `;
      }
    } else {
      const lista = document.createElement('ul');
      lista.style.listStyle = 'none';
      lista.style.padding = '0';
      lista.style.margin = '20px 0';
      lista.id = 'conquistaLista';
      lista.style.height = '250px';
      lista.style.maxHeight = '250px';
      lista.style.overflowY = 'auto';
      lista.style.background = '#181818';
      lista.style.borderRadius = '8px';
      lista.style.border = '1px solid #333';
      for (let i = 0; i < filteredArray.length; i++) {
        const achievement = filteredArray[i];
        const item = document.createElement('li');
        item.style.marginBottom = '12px';
        item.style.display = 'flex';
        item.style.alignItems = 'center';
        item.style.gap = '12px';
        item.style.background = '#222';
        item.style.borderRadius = '8px';
        item.style.padding = '8px 12px';
        item.style.border = '1px solid #333';
        item.style.display = 'flex';

        // Imagem
        const img = document.createElement('img');
        let badgeName = achievement.badgeName;
        if (!achievement.dateEarnedHardcore) {
          badgeName += '_lock';
        }
        img.src = `https://media.retroachievements.org/Badge/${badgeName}.png`;
        img.alt = 'Badge';
        img.style.width = '40px';
        img.style.height = '40px';
        img.style.borderRadius = '6px';
        img.style.border = '2px solid #444';
        img.style.background = '#222';
        item.appendChild(img);

        // Conte칰do
        const contentDiv = document.createElement('div');
        contentDiv.style.flex = '1';

        // T칤tulo (bot칚o)
        const btn = document.createElement('button');
        btn.style.background = '#333';
        btn.style.color = '#0ff';
        btn.style.border = '1px solid #0ff';
        btn.style.borderRadius = '6px';
        btn.style.padding = '6px 12px';
        btn.style.cursor = 'pointer';
        btn.onclick = function() {
          renderCard(achievement, usernameFormatted);
        };
        // Texto do bot칚o
        btn.innerHTML = achievement.title;
        if (achievement.type === 'missable') {
          btn.innerHTML += " <span style='color:#f00;font-weight:bold;'>! (M)</span>";
        }
        contentDiv.appendChild(btn);

        // Descri칞칚o
        const desc = document.createElement('div');
        desc.textContent = achievement.description;
        desc.style.color = '#fff';
        desc.style.fontSize = '0.95em';
        desc.style.marginTop = '4px';
        contentDiv.appendChild(desc);

        item.appendChild(contentDiv);
        lista.appendChild(item);
      }
      resultadoDiv.appendChild(lista);
      // Seleciona a primeira conquista ao carregar
      if (lista.children.length > 0) {
        const btn = lista.children[0].querySelector('button');
        if (btn) btn.click();
      }
    }

    // Fun칞칚o para renderizar card
    function renderCard(achievement, username) {
      let badgeName = achievement.badgeName;
      if (!achievement.dateEarnedHardcore) {
        badgeName += '_lock';
      }
      document.getElementById('cardConquista').innerHTML = `
        <div style="background:#181818;border-radius:12px;padding:20px;box-shadow:0 2px 8px #000;width:350px;display:flex;align-items:center;gap:16px;font-family:sans-serif;">
          <img src='https://media.retroachievements.org/Badge/${badgeName}.png' alt='Badge' style='width:64px;height:64px;border-radius:8px;border:2px solid #444;background:#222;'>
          <div style='flex:1;'>
            <div style='font-size:1em;font-weight:bold;color:#ff0;margin-bottom:8px;'>${username} ${meme[Math.floor(Math.random()*meme.length)]}:</div>
            <div style='font-size:1.2em;font-weight:bold;color:#0ff;'>${achievement.title}</div>
            <div style='color:#fff;margin:8px 0;'>${achievement.description}</div>
            <div style='color:#ff0;font-size:1em;'>${achievement.points} pontos</div>
          </div>
        </div>
      `;
    }
  } else {
    const msg = document.createElement('div');
    msg.textContent = 'Nenhuma conquista encontrada.';
    resultadoDiv.appendChild(msg);
  }
}

// Filtro da lista (listener 칰nico)
searchInput.addEventListener('input', function() {
  const termo = searchInput.value.toLowerCase();
  const lista = document.getElementById('conquistaLista');
  if (!lista) return;
  for (const item of lista.children) {
    const btn = item.querySelector('button');
    const achievement = achArrayGlobal.find(a => a.title === btn.textContent);
    const titleMatch = btn.textContent.toLowerCase().includes(termo);
    const descMatch = achievement && achievement.description && achievement.description.toLowerCase().includes(termo);
    if (titleMatch || descMatch) {
      item.style.display = 'flex';
    } else {
      item.style.display = 'none';
    }
  }
});


let lastData = null;
let lastUsername = '';

async function fetchAndUpdate() {
  try {
    const res = await fetch('/mainuser/achievements');
    if (!res.ok) return;
    const data = await res.json();
    // S칩 atualiza se mudou
    if (JSON.stringify(data.achievements) !== JSON.stringify(lastData)) {
      lastData = data.achievements;
      lastUsername = data.username;
      renderProgression(data.achievements, data.username);
    }
  } catch (e) {
    // N칚o faz nada se der erro
  }
}

setInterval(fetchAndUpdate, 1000);
fetchAndUpdate();
